<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <title>{% block title %}Welcome!{% endblock %}</title>
        {% block stylesheets %}{% endblock %}
        <!-- Compiled and minified CSS -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.96.1/css/materialize.min.css">
        <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
        <link rel="stylesheet" href="{{ asset('bundles/app/css/circular_menu.css') }}">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />
        <script src="{{ asset('bundles/app/js/snap.svg-min.js') }}"></script>
    </head>
    <body>
        {% block body %}{% endblock %}
        <!-- Compiled and minified JavaScript -->
        <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.96.1/js/materialize.min.js"></script>
        <script src="{{ asset('bundles/app/js/classie.js') }}"></script>
        <script src="{{ asset('bundles/app/js/parallax.js') }}"></script>

        <!-- buscador -->
        <script>
            (function() {
                var morphSearch = document.getElementById( 'morphsearch' ),
                        input = morphSearch.querySelector( 'input.morphsearch-input' ),
                        ctrlClose = morphSearch.querySelector( 'span.morphsearch-close' ),
                        isOpen = isAnimating = false,
                // show/hide search area
                        toggleSearch = function(evt) {
                            // return if open and the input gets focused
                            if( evt.type.toLowerCase() === 'focus' && isOpen ) return false;

                            var offsets = morphsearch.getBoundingClientRect();
                            if( isOpen ) {
                                classie.remove( morphSearch, 'open' );

                                // trick to hide input text once the search overlay closes
                                // todo: hardcoded times, should be done after transition ends
                                if( input.value !== '' ) {
                                    setTimeout(function() {
                                        classie.add( morphSearch, 'hideInput' );
                                        setTimeout(function() {
                                            classie.remove( morphSearch, 'hideInput' );
                                            input.value = '';
                                        }, 300 );
                                    }, 500);
                                }

                                input.blur();
                            }
                            else {
                                classie.add( morphSearch, 'open' );
                            }
                            isOpen = !isOpen;
                        };

                // events
                input.addEventListener( 'focus', toggleSearch );
                ctrlClose.addEventListener( 'click', toggleSearch );
                // esc key closes search overlay
                // keyboard navigation events
                document.addEventListener( 'keydown', function( ev ) {
                    var keyCode = ev.keyCode || ev.which;
                    if( keyCode === 27 && isOpen ) {
                        toggleSearch(ev);
                    }
                } );


                /***** for demo purposes only: don't allow to submit the form *****/
                morphSearch.querySelector( 'button[type="submit"]' ).addEventListener( 'click', function(ev) { ev.preventDefault(); } );
            })();
        </script>
        <!-- menu circular -->
        <script>
            (function() {

                function SVGMenu( el, options ) {
                    this.el = el;
                    this.init();
                }

                SVGMenu.prototype.init = function() {
                    this.trigger = this.el.querySelector( 'button.trigger' );
                    this.shapeEl = this.el.querySelector( 'span.morph-shape' );

                    var s = Snap( this.shapeEl.querySelector( 'svg' ) );
                    this.pathEl = s.select( 'path' );
                    this.paths = {
                        reset : this.pathEl.attr( 'd' ),
                        active : this.shapeEl.getAttribute( 'data-morph-active' )
                    };

                    this.isOpen = false;

                    this.initEvents();
                };

                SVGMenu.prototype.initEvents = function() {
                    this.trigger.addEventListener( 'click', this.toggle.bind(this) );
                };

                SVGMenu.prototype.toggle = function() {
                    var self = this;

                    if( this.isOpen ) {
                        classie.remove( this.el, 'menu--open' );
                    }
                    else {
                        setTimeout( function() { classie.add( self.el, 'menu--open' ); }, 175 );
                    }

                    this.pathEl.stop().animate( { 'path' : this.paths.active }, 150, mina.easein, function() {
                        self.pathEl.stop().animate( { 'path' : self.paths.reset }, 800, mina.elastic );
                    } );

                    this.isOpen = !this.isOpen;
                };

                new SVGMenu( document.getElementById( 'menu' ) );

            })();
        </script>



        <script>
                $(document).ready(function(){
                    $('.parallax').parallax();
                    $(".button-collapse").sideNav();
                    $(".dropdown-button").dropdown();

                    $('.datepicker').pickadate({
                        selectMonths: true, // Creates a dropdown to control month
                        selectYears: 15 // Creates a dropdown of 15 years to control year
                    });
                    var options = [
                        {selector: '.class', offset: 200, callback: 'globalFunction()' },
                        {selector: '.other-class', offset: 200, callback: 'globalFunction()' },
                    ];
                    Materialize.scrollFire(options);
                    $('ul.tabs').tabs();
                    $(".mi-trigger").click(function(){
                        $(".mi-dd").slideToggle();

                    });
                });
        </script>

        {% block scripts %}{% endblock %}
    </body>
</html>
